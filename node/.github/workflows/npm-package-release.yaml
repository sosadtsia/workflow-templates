##
# npm-package-release.yaml
# Will publish NPM package to GitHub Packages.
##
---
name: Release

on:
  pull_request:
    types: ['closed']
    branches: ['main']

  workflow_call:
    inputs:
      package_version_type:
        type: string
        description: Sem-version type(major, minor or patch)
        required: true

env:
  NODE_VERSION: '20.x'
  PACKAGE_VERSION_TYPE: 'patch'

jobs:
  build:
    if: github.event.pull_request.merged == true

    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
        os: [ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Node.js version ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install, run build and test
        run: |
          npm ci
          npm run build
          npm run lint
          npm test

  publish:
    runs-on: ubuntu-latest
    if: ${{ success() }}
    needs: [ build ]
    permissions:
      contents: read
      packages: write

    steps:
      - run: echo 'üîé The job was automatically triggered by a ${{ github.event_name }} event.'

      - run: echo 'This job is now running on a ${{ runner.os }} server hosted by GitHub.'

      - run: echo 'The name the branch is `${{ github.ref_name }}` repository name is `${{ github.workspace }}`.'

      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.DEPLOY_PRIVATE_KEY }}

      - name: Node.js version ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          registry-url: 'https://npm.pkg.github.com'
          scope: ''

      - name: Install npm packages
        run: npm ci

      - name: Setup Git
        run: |
          git config user.name ${{ vars.USER_NAME }}
          git config user.email ${{ vars.USER_EMAIL }}

      - name: Update application version
        id: version
        run: npm version ${{ inputs.package_version_type }}

      - name: Publish the package
        if: steps.install.outputs.exit_code == 0
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push latest version to "${{ github.ref_name }}" branch
        run: git push origin ${{ github.ref_name }} --follow-tags

      - name: Check the status of the job
        run: echo "üçè This job's status is ${{ job.status }}."
